name: Update GitHub Profile ASCII Art

on:
  schedule:
    - cron: "0 */6 * * *"  # Runs every 6 hours
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-profile:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyfiglet

    - name: Create Python script
      run: |
        cat << 'EOT' > update_readme.py
        import os
        import requests
        from datetime import datetime
        from pyfiglet import Figlet

        def get_github_activity(username):
            url = f"https://api.github.com/users/{username}/events/public"
            headers = {"Authorization": f"token {os.environ['GITHUB_TOKEN']}"}
            response = requests.get(url, headers=headers)
            response.raise_for_status()
            return response.json()

        def get_top_languages(username):
            url = f"https://api.github.com/users/{username}/repos"
            headers = {"Authorization": f"token {os.environ['GITHUB_TOKEN']}"}
            response = requests.get(url, headers=headers)
            response.raise_for_status()
            repos = response.json()
            
            languages = {}
            for repo in repos:
                language = repo['language']
                if language:
                    languages[language] = languages.get(language, 0) + 1
            
            sorted_languages = sorted(languages.items(), key=lambda x: x[1], reverse=True)
            return sorted_languages[:5]  # Return top 5 languages

        def create_ascii_bar(percentage, width=20):
            filled_width = int(width * percentage / 100)
            return f"[{'#' * filled_width}{'-' * (width - filled_width)}]"

        def format_activity(activity):
            event_type = activity['type'].replace('Event', '')
            repo = activity['repo']['name']
            created_at = datetime.strptime(activity['created_at'], "%Y-%m-%dT%H:%M:%SZ")
            return f"{created_at.strftime('%Y-%m-%d %H:%M')} | {event_type:15} | {repo}"

        def download_font():
            url = "https://raw.githubusercontent.com/thugcrowd/gangshit/master/gangshit1.flf"
            response = requests.get(url)
            response.raise_for_status()
            with open("gangshit1.flf", "wb") as f:
                f.write(response.content)

        download_font()

        username = "zoa-sh"
        activities = get_github_activity(username)
        top_languages = get_top_languages(username)

        f = Figlet(font='gangshit1', width=200)
        ascii_header = f.renderText('ZOA')

        output = f"```\n{ascii_header}\n```\n\n"
        output += "üöÄ Welcome to my GitHub profile!\n\n"

        # Adding badges
        output += "[![Website](https://img.shields.io/website?label=zoa.sh&style=for-the-badge&url=https%3A%2F%2Fzoa.sh)](https://zoa.sh)\n"
        output += "[![Twitter Follow](https://img.shields.io/twitter/follow/zoa_sh?color=1DA1F2&logo=twitter&style=for-the-badge)](https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fgithub.com%2Fzoa-sh&screen_name=zoa_sh)\n"
        output += "[![GitHub followers](https://img.shields.io/github/followers/zoa-sh?logo=GitHub&style=for-the-badge)](https://github.com/zoa-sh)\n"
        output += "[![GitHub Stars](https://img.shields.io/github/stars/zoa-sh?logo=github&style=for-the-badge)](https://github.com/zoa-sh)\n\n"

        output += "## üëæ About Me\n"
        output += "I'm a tech-savvy professional with expertise in computer science, programming, security, networking, engineering, and repair. As an incredibly fast learner, I'm always looking to simplify, automate, and master new challenges and projects with an out-of-the-box mindset.\n\n"
        output += "- üê± Cat lover\n"
        output += "- üìª Amateur radio and meshtastic enthusiast\n"
        output += "- üñ•Ô∏è Open-source contributor\n"
        output += "- üîí Malware development and analysis explorer\n"
        output += "- üåê Networking nerd (especially BGP)\n\n"

        output += "## üõ†Ô∏è Top Languages\n"
        output += "```\n"
        total = sum(lang[1] for lang in top_languages)
        for lang, count in top_languages:
            percentage = (count / total) * 100
            output += f"{lang:<10} {create_ascii_bar(percentage)} {percentage:.1f}%\n"
        output += "```\n\n"

        output += "## üì´ Get in Touch\n"
        output += "- Website: [zoa.sh](https://zoa.sh)\n"
        output += "- Email: zoa@zoa.sh\n\n"

        output += "## üí° Fun Fact\n"
        output += "Try my website on curl: `curl zoa.sh`\n\n"

        output += "## üî• Recent Activity\n"
        output += "```\n"
        output += "-" * 60 + "\n"
        for activity in activities[:5]:  # Display last 5 activities
            output += format_activity(activity) + "\n"
        output += "-" * 60 + "\n"
        output += f"\nLast updated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        output += "\n```"

        output += "\n---\n"
        output += "<p align=\"center\">This README is <b>auto-generated</b> with Python and GitHub Actions</p>\n"

        with open("README.md", "w") as f:
            f.write(output)

        print("README.md has been updated successfully.")
        print("Content of README.md:")
        with open("README.md", "r") as f:
            print(f.read())
        EOT

    - name: Execute Python script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: python update_readme.py

    - name: Commit and push changes
      run: |
        git config --local user.email "zoa@zoa.sh"
        git config --local user.name "zoa-sh"
        git add README.md
        git commit -m "Update profile README" || echo "No changes to commit"
        git push || echo "No changes to push"
