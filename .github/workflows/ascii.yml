name: Update GitHub Profile ASCII Art

on:
  schedule:
    - cron: "0 */6 * * *"  # Runs every 6 hours
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-profile:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyfiglet

    - name: Create and run update_profile.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cat << EOF > update_profile.py
        import os
        import sys
        import requests
        from datetime import datetime
        from pyfiglet import Figlet

        def get_github_activity(username):
            url = f"https://api.github.com/users/{username}/events/public"
            headers = {"Authorization": f"token {os.environ['GITHUB_TOKEN']}"}
            response = requests.get(url, headers=headers)
            response.raise_for_status()
            return response.json()

        def create_ascii_art(text):
            f = Figlet(font='slant')
            return f.renderText(text)

        def format_activity(activity):
            event_type = activity['type'].replace('Event', '')
            repo = activity['repo']['name']
            created_at = datetime.strptime(activity['created_at'], "%Y-%m-%dT%H:%M:%SZ")
            return f"{created_at.strftime('%Y-%m-%d %H:%M')} | {event_type:15} | {repo}"

        try:
            username = "zoa-sh"
            activities = get_github_activity(username)

            ascii_header = create_ascii_art("Zoa's GitHub")

            output = f"{ascii_header}\n\n"
            output += "Recent Activity:\n"
            output += "-" * 60 + "\n"

            for activity in activities[:5]:  # Display last 5 activities
                output += format_activity(activity) + "\n"

            output += "-" * 60 + "\n"
            output += f"\nLast updated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"

            print("Content to be written to README.md:")
            print(output)

            # Write content to file
            with open("README.md", "w") as f:
                print("```", file=f)
                print(output, file=f)
                print("```", file=f)

            print("README.md has been updated successfully.")
            
            # Verify file contents
            with open("README.md", "r") as f:
                content = f.read()
                print("Verified README.md contents:")
                print(content)
                
            if not content.strip():
                raise Exception("README.md is empty after writing")

        except Exception as e:
            print(f"An error occurred: {str(e)}", file=sys.stderr)
            print(f"Current working directory: {os.getcwd()}", file=sys.stderr)
            print(f"Contents of current directory:", file=sys.stderr)
            print(os.listdir(), file=sys.stderr)
            print(f"README.md permissions:", file=sys.stderr)
            print(os.stat("README.md"), file=sys.stderr)
            raise
        EOF

        python update_profile.py

    - name: Debug file contents
      run: |
        echo "Current directory contents:"
        ls -la
        echo "README.md permissions:"
        ls -l README.md
        echo "README.md contents:"
        cat README.md
        echo "File size of README.md:"
        wc -c README.md

    - name: Commit and push changes
      run: |
        git config --local user.email "zoa@zoa.sh"
        git config --local user.name "zoa-sh"
        git add README.md
        git status
        git diff --cached
        git commit -m "Update profile ASCII art" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Final check
      run: |
        echo "Final README.md contents:"
        cat README.md
